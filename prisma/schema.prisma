// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  phone         String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Account     Account[]
  Session     Session[]
  BankAccount BankAccount[]
  Transaction Transaction[]
  Logs        Logs[]
  Bills       Bills[]
  Goals       Goals[]
  Profile     Profile?
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([identifier, token])
}

model BankAccount {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  balance Float
  name    String
  desc    String?

  user User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.ObjectId
}

model Bills {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  icon   String
  name   String
  desc   String?
  amount Float

  user User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.ObjectId
}

model Goals {
  id              String  @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  desc            String?
  totalAmount     Float
  collectedAmount Float

  user User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.ObjectId
}

model Transaction {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  icon      String
  name      String
  desc      String?
  amount    Float
  timestamp DateTime @default(now())

  user User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.ObjectId
}

model Profile {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  currency String @default("$")
  income   Int?

  user User? @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @unique @db.ObjectId
}

model Logs {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  name   String?
  action String?

  user User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.ObjectId
}

model Keys {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String @unique
  value String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model News {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  sourceId    String?   @default("NA")
  sourceName  String?   @default("Unknown")
  author      String?   @default("Unknown")
  title       String?   @default("NA")
  description String?   @default("Unknown")
  url         String?   @default("NA")
  imageUrl    String?   @default("NA")
  publishedAt DateTime?
  content     String?   @default("NA")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
